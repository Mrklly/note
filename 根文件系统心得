hisi3516下的根文件系统
rootfs_uclibc/etc/init.d

----------------------
vi S00devs
 
 mknod /dev/console c 5 1
 mknod /dev/ttyAMA0 c 204 64
 mknod /dev/ttyAMA1 c 204 65
 mknod /dev/ttyS000 c 204 64
 mknod /dev/null    c 1 3

mknod DEVNAME {b | c} MAJOR MINOR
1，DEVNAME是要创建的设备文件名，如果想将设备文件放在一个特定的文件夹下，就需要先用mkdir在dev目录下新建一个目录；

2， b和c 分别表示块设备和字符设备：

b表示系统从块设备中读取数据的时候，直接从内存的buffer中读取数据，而不经过磁盘；

c表示字符设备文件与设备传送数据的时候是以字符的形式传送，一次传送一个字符，比如打印机、终端都是以字符的形式传送数据；

3，MAJOR和MINOR分别表示主设备号和次设备号：

为了管理设备，系统为每个设备分配一个编号，一个设备号由主设备号和次设备号组成。主设备号标示某一种类的设备，次设备号用来区分同一类型的设备。linux操作系统中为设备文件编号分配了32位无符号整数，其中前12位是主设备号，后20位为次设备号，所以在向系统申请设备文件时主设备号不好超过4095，次设备号不好超过2^20 -1。

在/dev目录下生成console和null这两个重要设备文件   Linux就这个范儿 P611
cd  /dev
mknod -m 600 /mnt/m13/dev/console  c 5 1
mknod -m 666 /mnt/m13/dev/console  c 1 3

--------------------
vi S01udev

mkdir /dev/pts
  mount -t devpts devpts /dev/pts
  
  mkdir -p /dev/.udev
  udevd --daemon
  udevadm trigger

---------------------
vi S80network

ipaddr=
bootp=
gateway=
netmask=
hostname=
netdev=
autoconf=

for ipinfo in `cat /proc/cmdline`
do
    case "$ipinfo" in
    ip=*)
        for var in  ipaddr bootp gateway netmask hostname netdev autoconf
        do
            eval read $var
        done << EOF
        `echo "$ipinfo" | sed "s/:/\n/g" | sed "s/^[    ]*$/-/g"`
EOF
        ipaddr=`echo "$ipaddr" | cut -d = -f 2`
        [ x$ipaddr == x ] && ipaddr=x
        ;;
    esac
done

[ -z "$ipaddr" ] && exit 0

echo "      IP: $ipaddr"
echo "   BOOTP: $bootp"
echo " GATEWAY: $gateway"
echo " NETMASK: $netmask"
echo "HOSTNAME: $hostname"
echo "  NETDEV: $netdev"
echo "AUTOCONF: $autoconf"

if [ x$ipaddr == x- ] ; then
    # use DHCP
    :   
else
    cmd="ifconfig $netdev $ipaddr"
    [ x$netmask != x- ] && cmd="$cmd netmask $netmask"
    eval $cmd
    [ x$gateway != x- ] && route add default gw $gateway
fi

ifconfig lo 127.0.0.1




